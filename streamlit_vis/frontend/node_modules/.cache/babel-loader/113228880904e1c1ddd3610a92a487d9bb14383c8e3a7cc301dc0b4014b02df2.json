{"ast":null,"code":"import React from'react';import{Network}from'vis-network';import{DataSet}from'vis-data';import{Streamlit,StreamlitComponentBase,withStreamlitConnection}from\"streamlit-component-lib\";import{jsx as _jsx}from\"react/jsx-runtime\";class VisNetwork extends StreamlitComponentBase{constructor(){super(...arguments);this.container=/*#__PURE__*/React.createRef();this.backgroundCanvas=null;this.backgroundImage=null;this.renderLoop=null;this.state={network:null,nodes:new DataSet([]),edges:new DataSet([])};this.renderBackground=()=>{if(!this.backgroundCanvas||!this.backgroundImage||!this.state.network){console.log(\"Missing required elements for render:\",{hasCanvas:!!this.backgroundCanvas,hasImage:!!this.backgroundImage,hasNetwork:!!this.state.network});return;}const ctx=this.backgroundCanvas.getContext(\"2d\");if(!ctx){console.log(\"Could not get canvas context\");return;}try{const position=this.state.network.getViewPosition();const scale=this.state.network.getScale();const srcWidth=this.backgroundCanvas.width/scale;const srcHeight=this.backgroundCanvas.height/scale;const imgCenterX=this.backgroundImage.width/2-srcWidth/2+position.x;const imgCenterY=this.backgroundImage.height/2-srcHeight/2+position.y;ctx.clearRect(0,0,this.backgroundCanvas.width,this.backgroundCanvas.height);console.log(\"Drawing image with parameters:\",{imgCenterX,imgCenterY,srcWidth,srcHeight,canvasWidth:this.backgroundCanvas.width,canvasHeight:this.backgroundCanvas.height});ctx.drawImage(this.backgroundImage,imgCenterX,imgCenterY,srcWidth,srcHeight,0,0,this.backgroundCanvas.width,this.backgroundCanvas.height);this.renderLoop=requestAnimationFrame(this.renderBackground);}catch(error){console.error(\"Error in renderBackground:\",error);}};}componentDidMount(){console.log(\"Component mounted\");Streamlit.setFrameHeight(600);this.setupNetwork();}componentDidUpdate(){// Update nodes and edges when they change\nconst props=this.props.args;const nodes=new DataSet(props.nodes);const edges=new DataSet(props.edges);if(this.state.network){this.state.network.setData({nodes,edges});}}componentWillUnmount(){if(this.renderLoop){cancelAnimationFrame(this.renderLoop);}if(this.state.network){this.state.network.destroy();}}setupNetwork(){if(!this.container.current)return;const props=this.props.args;// Create new datasets\nconst nodes=new DataSet(props.nodes);const edges=new DataSet(props.edges);// Create network\nconst network=new Network(this.container.current,{nodes,edges},{...props.options,height:'600px'});// Event handlers\nnetwork.on('select',params=>{Streamlit.setComponentValue({selected:params.nodes,positions:this.getNodePositions()});});network.on('dragEnd',()=>{Streamlit.setComponentValue({selected:network.getSelectedNodes(),positions:this.getNodePositions()});});this.setState({network,nodes,edges},()=>{if(props.background_image){this.setupBackground(props.background_image);}});}setupBackground(backgroundImage){if(!this.state.network||!this.container.current){console.log(\"Network or container not ready\");return;}// Clean up existing\nif(this.renderLoop){console.log(\"Cleaning up existing render loop\");cancelAnimationFrame(this.renderLoop);this.renderLoop=null;}if(this.backgroundCanvas){console.log(\"Removing existing canvas\");this.backgroundCanvas.remove();this.backgroundCanvas=null;}// Test with a direct URL first\nconst testUrl=\"https://www.pngkey.com/png/full/251-2512766_floor-plan-house.png\";console.log(\"Setting up background with test URL\");// Create canvas\nconst canvas=document.createElement(\"canvas\");console.log(\"Canvas created\");canvas.style.position=\"absolute\";canvas.style.left=\"0px\";canvas.style.top=\"0px\";canvas.style.zIndex=\"-1\";canvas.style.pointerEvents=\"none\";// Make sure canvas doesn't interfere with interactions\n// Get container dimensions\nconst containerRect=this.container.current.getBoundingClientRect();console.log(\"Container dimensions:\",containerRect.width,containerRect.height);// Set canvas size\ncanvas.width=containerRect.width;canvas.height=containerRect.height;// Debug print\nconsole.log(\"Canvas dimensions set to:\",canvas.width,canvas.height);// Create image\nconst img=new Image();console.log(\"Image object created\");img.onload=()=>{console.log(\"Image loaded successfully\");console.log(\"Image dimensions:\",img.width,img.height);if(this.container.current){// Try inserting at the beginning of container\nthis.container.current.insertBefore(canvas,this.container.current.firstChild);console.log(\"Canvas inserted into container\");this.backgroundCanvas=canvas;this.backgroundImage=img;// Start render loop\nconsole.log(\"Starting render loop\");this.renderBackground();}else{console.log(\"Container not available for canvas insertion\");}};img.onerror=error=>{console.error(\"Error loading image:\",error);};// Try both the test URL and the provided background image\nif(backgroundImage){console.log(\"Using provided background image\");const imageUrl=backgroundImage.startsWith('data:image/')?backgroundImage:`data:image/png;base64,${backgroundImage}`;img.src=imageUrl;console.log(\"Image source set to provided image\");}else{console.log(\"Using test URL\");img.src=testUrl;console.log(\"Image source set to test URL\");}}getNodePositions(){if(!this.state.network||!this.state.nodes)return{};const positions={};this.state.nodes.forEach(node=>{const pos=this.state.network.getPosition(node.id);positions[node.id]={x:pos.x,y:pos.y};});return positions;}render(){return/*#__PURE__*/_jsx(\"div\",{ref:this.container,style:{width:'100%',height:'600px',border:'1px solid #ddd',position:'relative',overflow:'hidden',backgroundColor:'#ffffff'}});}}export default withStreamlitConnection(VisNetwork);","map":{"version":3,"names":["React","Network","DataSet","Streamlit","StreamlitComponentBase","withStreamlitConnection","jsx","_jsx","VisNetwork","constructor","arguments","container","createRef","backgroundCanvas","backgroundImage","renderLoop","state","network","nodes","edges","renderBackground","console","log","hasCanvas","hasImage","hasNetwork","ctx","getContext","position","getViewPosition","scale","getScale","srcWidth","width","srcHeight","height","imgCenterX","x","imgCenterY","y","clearRect","canvasWidth","canvasHeight","drawImage","requestAnimationFrame","error","componentDidMount","setFrameHeight","setupNetwork","componentDidUpdate","props","args","setData","componentWillUnmount","cancelAnimationFrame","destroy","current","options","on","params","setComponentValue","selected","positions","getNodePositions","getSelectedNodes","setState","background_image","setupBackground","remove","testUrl","canvas","document","createElement","style","left","top","zIndex","pointerEvents","containerRect","getBoundingClientRect","img","Image","onload","insertBefore","firstChild","onerror","imageUrl","startsWith","src","forEach","node","pos","getPosition","id","render","ref","border","overflow","backgroundColor"],"sources":["C:/Users/owner/Documents/Innovative Dev/Sensor Sentry GUI - Streamlit/streamlit_vis/frontend/src/VisNetwork.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Network } from 'vis-network';\r\nimport { DataSet } from 'vis-data';\r\nimport {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\n\r\ninterface NetworkProps {\r\n  nodes: any[];\r\n  edges: any[];\r\n  options: any;\r\n  background_image?: string;\r\n  height?: string;\r\n}\r\n\r\ninterface State {\r\n  network: Network | null;\r\n  nodes: DataSet<any>;\r\n  edges: DataSet<any>;\r\n}\r\n\r\nclass VisNetwork extends StreamlitComponentBase<State> {\r\n  private container = React.createRef<HTMLDivElement>();\r\n  private backgroundCanvas: HTMLCanvasElement | null = null;\r\n  private backgroundImage: HTMLImageElement | null = null;\r\n  private renderLoop: number | null = null;\r\n  \r\n  public state: State = {\r\n    network: null,\r\n    nodes: new DataSet([]),\r\n    edges: new DataSet([])\r\n  };\r\n\r\n  public componentDidMount() {\r\n    console.log(\"Component mounted\");\r\n    Streamlit.setFrameHeight(600);\r\n    this.setupNetwork();\r\n  }\r\n\r\n  public componentDidUpdate() {\r\n    // Update nodes and edges when they change\r\n    const props = this.props.args as NetworkProps;\r\n    const nodes = new DataSet(props.nodes);\r\n    const edges = new DataSet(props.edges);\r\n    \r\n    if (this.state.network) {\r\n      this.state.network.setData({ nodes, edges });\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.renderLoop) {\r\n      cancelAnimationFrame(this.renderLoop);\r\n    }\r\n    if (this.state.network) {\r\n      this.state.network.destroy();\r\n    }\r\n  }\r\n\r\n  private setupNetwork() {\r\n    if (!this.container.current) return;\r\n\r\n    const props = this.props.args as NetworkProps;\r\n    \r\n    // Create new datasets\r\n    const nodes = new DataSet(props.nodes);\r\n    const edges = new DataSet(props.edges);\r\n\r\n    // Create network\r\n    const network = new Network(\r\n      this.container.current,\r\n      { nodes, edges },\r\n      {\r\n        ...props.options,\r\n        height: '600px',\r\n      }\r\n    );\r\n\r\n    // Event handlers\r\n    network.on('select', (params) => {\r\n      Streamlit.setComponentValue({\r\n        selected: params.nodes,\r\n        positions: this.getNodePositions()\r\n      });\r\n    });\r\n\r\n    network.on('dragEnd', () => {\r\n      Streamlit.setComponentValue({\r\n        selected: network.getSelectedNodes(),\r\n        positions: this.getNodePositions()\r\n      });\r\n    });\r\n\r\n    this.setState({ network, nodes, edges }, () => {\r\n      if (props.background_image) {\r\n        this.setupBackground(props.background_image);\r\n      }\r\n    });\r\n  }\r\n\r\n  private setupBackground(backgroundImage?: string) {\r\n    if (!this.state.network || !this.container.current) {\r\n      console.log(\"Network or container not ready\");\r\n      return;\r\n    }\r\n\r\n    // Clean up existing\r\n    if (this.renderLoop) {\r\n      console.log(\"Cleaning up existing render loop\");\r\n      cancelAnimationFrame(this.renderLoop);\r\n      this.renderLoop = null;\r\n    }\r\n    if (this.backgroundCanvas) {\r\n      console.log(\"Removing existing canvas\");\r\n      this.backgroundCanvas.remove();\r\n      this.backgroundCanvas = null;\r\n    }\r\n\r\n    // Test with a direct URL first\r\n    const testUrl = \"https://www.pngkey.com/png/full/251-2512766_floor-plan-house.png\";\r\n    console.log(\"Setting up background with test URL\");\r\n\r\n    // Create canvas\r\n    const canvas = document.createElement(\"canvas\");\r\n    console.log(\"Canvas created\");\r\n\r\n    canvas.style.position = \"absolute\";\r\n    canvas.style.left = \"0px\";\r\n    canvas.style.top = \"0px\";\r\n    canvas.style.zIndex = \"-1\";\r\n    canvas.style.pointerEvents = \"none\"; // Make sure canvas doesn't interfere with interactions\r\n\r\n    // Get container dimensions\r\n    const containerRect = this.container.current.getBoundingClientRect();\r\n    console.log(\"Container dimensions:\", containerRect.width, containerRect.height);\r\n\r\n    // Set canvas size\r\n    canvas.width = containerRect.width;\r\n    canvas.height = containerRect.height;\r\n\r\n    // Debug print\r\n    console.log(\"Canvas dimensions set to:\", canvas.width, canvas.height);\r\n\r\n    // Create image\r\n    const img = new Image();\r\n    console.log(\"Image object created\");\r\n\r\n    img.onload = () => {\r\n      console.log(\"Image loaded successfully\");\r\n      console.log(\"Image dimensions:\", img.width, img.height);\r\n\r\n      if (this.container.current) {\r\n        // Try inserting at the beginning of container\r\n        this.container.current.insertBefore(canvas, this.container.current.firstChild);\r\n        console.log(\"Canvas inserted into container\");\r\n        \r\n        this.backgroundCanvas = canvas;\r\n        this.backgroundImage = img;\r\n        \r\n        // Start render loop\r\n        console.log(\"Starting render loop\");\r\n        this.renderBackground();\r\n      } else {\r\n        console.log(\"Container not available for canvas insertion\");\r\n      }\r\n    };\r\n\r\n    img.onerror = (error) => {\r\n      console.error(\"Error loading image:\", error);\r\n    };\r\n\r\n    // Try both the test URL and the provided background image\r\n    if (backgroundImage) {\r\n      console.log(\"Using provided background image\");\r\n      const imageUrl = backgroundImage.startsWith('data:image/')\r\n        ? backgroundImage\r\n        : `data:image/png;base64,${backgroundImage}`;\r\n      img.src = imageUrl;\r\n      console.log(\"Image source set to provided image\");\r\n    } else {\r\n      console.log(\"Using test URL\");\r\n      img.src = testUrl;\r\n      console.log(\"Image source set to test URL\");\r\n    }\r\n  }\r\n\r\n  private renderBackground = () => {\r\n    if (!this.backgroundCanvas || !this.backgroundImage || !this.state.network) {\r\n      console.log(\"Missing required elements for render:\", {\r\n        hasCanvas: !!this.backgroundCanvas,\r\n        hasImage: !!this.backgroundImage,\r\n        hasNetwork: !!this.state.network\r\n      });\r\n      return;\r\n    }\r\n    \r\n    const ctx = this.backgroundCanvas.getContext(\"2d\");\r\n    if (!ctx) {\r\n      console.log(\"Could not get canvas context\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const position = this.state.network.getViewPosition();\r\n      const scale = this.state.network.getScale();\r\n      \r\n      const srcWidth = this.backgroundCanvas.width / scale;\r\n      const srcHeight = this.backgroundCanvas.height / scale;\r\n      \r\n      const imgCenterX = ((this.backgroundImage.width / 2) - srcWidth / 2) + position.x;\r\n      const imgCenterY = ((this.backgroundImage.height / 2) - srcHeight / 2) + position.y;\r\n\r\n      ctx.clearRect(0, 0, this.backgroundCanvas.width, this.backgroundCanvas.height);\r\n      \r\n      console.log(\"Drawing image with parameters:\", {\r\n        imgCenterX,\r\n        imgCenterY,\r\n        srcWidth,\r\n        srcHeight,\r\n        canvasWidth: this.backgroundCanvas.width,\r\n        canvasHeight: this.backgroundCanvas.height\r\n      });\r\n\r\n      ctx.drawImage(\r\n        this.backgroundImage, \r\n        imgCenterX, \r\n        imgCenterY, \r\n        srcWidth, \r\n        srcHeight,\r\n        0,\r\n        0,\r\n        this.backgroundCanvas.width,\r\n        this.backgroundCanvas.height\r\n      );\r\n\r\n      this.renderLoop = requestAnimationFrame(this.renderBackground);\r\n    } catch (error) {\r\n      console.error(\"Error in renderBackground:\", error);\r\n    }\r\n  };\r\n\r\n  private getNodePositions() {\r\n    if (!this.state.network || !this.state.nodes) return {};\r\n    \r\n    const positions: { [key: string]: { x: number, y: number } } = {};\r\n    this.state.nodes.forEach((node) => {\r\n      const pos = this.state.network!.getPosition(node.id);\r\n      positions[node.id] = { x: pos.x, y: pos.y };\r\n    });\r\n    \r\n    return positions;\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div\r\n        ref={this.container}\r\n        style={{\r\n          width: '100%',\r\n          height: '600px',\r\n          border: '1px solid #ddd',\r\n          position: 'relative',\r\n          overflow: 'hidden',\r\n          backgroundColor: '#ffffff'\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(VisNetwork);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}