{"ast":null,"code":"import React from'react';import{Network}from'vis-network';import{DataSet}from'vis-data';import{Streamlit,StreamlitComponentBase,withStreamlitConnection}from\"streamlit-component-lib\";import{jsx as _jsx}from\"react/jsx-runtime\";class VisNetwork extends StreamlitComponentBase{constructor(){super(...arguments);this.container=/*#__PURE__*/React.createRef();this.backgroundCanvas=null;this.backgroundImage=null;this.animationFrameId=null;this.state={network:null,nodes:new DataSet([]),edges:new DataSet([]),prevProps:null};this.renderBackground=()=>{// Cancel any existing animation frame before starting new one\nif(this.animationFrameId!==null){cancelAnimationFrame(this.animationFrameId);this.animationFrameId=null;}if(!this.backgroundCanvas||!this.backgroundImage||!this.state.network){return;}const ctx=this.backgroundCanvas.getContext('2d');if(!ctx)return;const position=this.state.network.getViewPosition();const scale=this.state.network.getScale();const srcWidth=this.backgroundCanvas.width/scale;const srcHeight=this.backgroundCanvas.height/scale;const imgCenterX=this.backgroundImage.width/2-srcWidth/2+position.x;const imgCenterY=this.backgroundImage.height/2-srcHeight/2+position.y;ctx.clearRect(0,0,this.backgroundCanvas.width,this.backgroundCanvas.height);try{ctx.drawImage(this.backgroundImage,imgCenterX,imgCenterY,srcWidth,srcHeight,0,0,this.backgroundCanvas.width,this.backgroundCanvas.height);}catch(e){console.error(\"Error drawing background:\",e);}this.animationFrameId=requestAnimationFrame(this.renderBackground);};}componentDidMount(){console.log(\"Component mounted\");Streamlit.setFrameHeight(600);this.setupNetwork();}componentDidUpdate(){const props=this.props.args;const prevProps=this.state.prevProps;console.log(\"Component updating\");console.log(\"Background image present:\",!!props.background_image);console.log(\"Previous background image present:\",!!(prevProps!==null&&prevProps!==void 0&&prevProps.background_image));if(props.background_image){console.log(\"Background image length:\",props.background_image.length);}// Only update if props actually changed\nif(prevProps===null||JSON.stringify(prevProps.nodes)!==JSON.stringify(props.nodes)||JSON.stringify(prevProps.edges)!==JSON.stringify(props.edges)||prevProps.background_image!==props.background_image){console.log(\"Props changed, updating component\");if(props.background_image!==(prevProps===null||prevProps===void 0?void 0:prevProps.background_image)){console.log(\"Background image changed, setting up new background\");this.setupBackground(props.background_image);}else{this.setupNetwork();}this.setState({prevProps:props});}}componentWillUnmount(){console.log(\"Component unmounting\");if(this.animationFrameId!==null){cancelAnimationFrame(this.animationFrameId);}if(this.state.network){this.state.network.destroy();}}setupBackground(backgroundImage){var _this$backgroundImage;if(!this.container.current){console.log(\"Container not ready\");return;}// If we already have the same image loaded, don't reload\nif((_this$backgroundImage=this.backgroundImage)!==null&&_this$backgroundImage!==void 0&&_this$backgroundImage.src.endsWith(backgroundImage||'')){console.log(\"Image already loaded\");return;}console.log(\"Setting up background, image data present:\",!!backgroundImage);// Clear existing canvas if any\nif(this.backgroundCanvas){console.log(\"Removing existing canvas\");this.backgroundCanvas.remove();this.backgroundCanvas=null;}if(backgroundImage){console.log(\"Creating new canvas\");this.backgroundCanvas=document.createElement('canvas');this.backgroundCanvas.style.position='absolute';this.backgroundCanvas.style.left='0px';this.backgroundCanvas.style.top='0px';this.backgroundCanvas.style.zIndex='-1';this.backgroundCanvas.width=this.container.current.clientWidth;this.backgroundCanvas.height=this.container.current.clientHeight;console.log(\"Canvas size:\",this.backgroundCanvas.width,this.backgroundCanvas.height);this.container.current.appendChild(this.backgroundCanvas);const img=new Image();img.onload=()=>{console.log(\"Image loaded successfully\");if(img===this.backgroundImage){console.log(\"Image size:\",img.width,img.height);// Only start render if this is still the current image\nthis.startBackgroundRender();}};img.onerror=e=>{console.error(\"Error loading image:\",e);};const imageUrl=backgroundImage.startsWith('data:image/')?backgroundImage:`data:image/png;base64,${backgroundImage}`;// Set the image before setting the source to prevent race conditions\nthis.backgroundImage=img;img.src=imageUrl;}}startBackgroundRender(){console.log(\"Starting background render\");if(this.animationFrameId!==null){cancelAnimationFrame(this.animationFrameId);}this.renderBackground();}setupNetwork(){if(!this.container.current)return;const props=this.props.args;// Clear existing network\nif(this.state.network){this.state.network.destroy();}// Create new datasets\nconst nodes=new DataSet(props.nodes);const edges=new DataSet(props.edges);// Create network with merged options\nconst network=new Network(this.container.current,{nodes,edges},{...props.options,height:'600px',autoResize:true,layout:{randomSeed:1,improvedLayout:true}});// Set up event handlers\nnetwork.on('select',params=>{Streamlit.setComponentValue({selected:params.nodes,positions:this.getNodePositions()});});network.on('dragEnd',()=>{Streamlit.setComponentValue({selected:network.getSelectedNodes(),positions:this.getNodePositions()});});this.setState({network,nodes,edges},()=>{if(props.background_image){this.setupBackground(props.background_image);}});}getNodePositions(){if(!this.state.network||!this.state.nodes)return{};const positions={};this.state.nodes.forEach(node=>{const pos=this.state.network.getPosition(node.id);positions[node.id]={x:pos.x,y:pos.y};});return positions;}render(){return/*#__PURE__*/_jsx(\"div\",{ref:this.container,style:{width:'100%',height:'600px',minHeight:'600px',border:'1px solid #ddd',borderRadius:'4px',backgroundColor:'#ffffff',position:'relative',overflow:'hidden'}});}}export default withStreamlitConnection(VisNetwork);","map":{"version":3,"names":["React","Network","DataSet","Streamlit","StreamlitComponentBase","withStreamlitConnection","jsx","_jsx","VisNetwork","constructor","arguments","container","createRef","backgroundCanvas","backgroundImage","animationFrameId","state","network","nodes","edges","prevProps","renderBackground","cancelAnimationFrame","ctx","getContext","position","getViewPosition","scale","getScale","srcWidth","width","srcHeight","height","imgCenterX","x","imgCenterY","y","clearRect","drawImage","e","console","error","requestAnimationFrame","componentDidMount","log","setFrameHeight","setupNetwork","componentDidUpdate","props","args","background_image","length","JSON","stringify","setupBackground","setState","componentWillUnmount","destroy","_this$backgroundImage","current","src","endsWith","remove","document","createElement","style","left","top","zIndex","clientWidth","clientHeight","appendChild","img","Image","onload","startBackgroundRender","onerror","imageUrl","startsWith","options","autoResize","layout","randomSeed","improvedLayout","on","params","setComponentValue","selected","positions","getNodePositions","getSelectedNodes","forEach","node","pos","getPosition","id","render","ref","minHeight","border","borderRadius","backgroundColor","overflow"],"sources":["C:/Users/owner/Documents/Innovative Dev/Sensor Sentry GUI - Streamlit/streamlit_vis/frontend/src/VisNetwork.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Network } from 'vis-network';\r\nimport { DataSet } from 'vis-data';\r\nimport {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\n\r\ninterface NetworkProps {\r\n  nodes: any[];\r\n  edges: any[];\r\n  options: any;\r\n  background_image?: string;\r\n  height?: string;\r\n}\r\n\r\ninterface State {\r\n  network: Network | null;\r\n  nodes: DataSet<any>;\r\n  edges: DataSet<any>;\r\n  prevProps: NetworkProps | null;\r\n}\r\n\r\nclass VisNetwork extends StreamlitComponentBase<State> {\r\n  private container = React.createRef<HTMLDivElement>();\r\n  private backgroundCanvas: HTMLCanvasElement | null = null;\r\n  private backgroundImage: HTMLImageElement | null = null;\r\n  private animationFrameId: number | null = null;\r\n  \r\n  public state: State = {\r\n    network: null,\r\n    nodes: new DataSet([]),\r\n    edges: new DataSet([]),\r\n    prevProps: null\r\n  };\r\n\r\n  public componentDidMount() {\r\n    console.log(\"Component mounted\");\r\n    Streamlit.setFrameHeight(600);\r\n    this.setupNetwork();\r\n  }\r\n\r\n  public componentDidUpdate() {\r\n    const props = this.props.args as NetworkProps;\r\n    const prevProps = this.state.prevProps;\r\n\r\n    console.log(\"Component updating\");\r\n    console.log(\"Background image present:\", !!props.background_image);\r\n    console.log(\"Previous background image present:\", !!prevProps?.background_image);\r\n    \r\n    if (props.background_image) {\r\n      console.log(\"Background image length:\", props.background_image.length);\r\n    }\r\n\r\n    // Only update if props actually changed\r\n    if (prevProps === null || \r\n        JSON.stringify(prevProps.nodes) !== JSON.stringify(props.nodes) ||\r\n        JSON.stringify(prevProps.edges) !== JSON.stringify(props.edges) ||\r\n        prevProps.background_image !== props.background_image) {\r\n      \r\n      console.log(\"Props changed, updating component\");\r\n      \r\n      if (props.background_image !== prevProps?.background_image) {\r\n        console.log(\"Background image changed, setting up new background\");\r\n        this.setupBackground(props.background_image);\r\n      } else {\r\n        this.setupNetwork();\r\n      }\r\n      \r\n      this.setState({ prevProps: props });\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    console.log(\"Component unmounting\");\r\n    if (this.animationFrameId !== null) {\r\n      cancelAnimationFrame(this.animationFrameId);\r\n    }\r\n    if (this.state.network) {\r\n      this.state.network.destroy();\r\n    }\r\n  }\r\n\r\n  private setupBackground(backgroundImage?: string) {\r\n    if (!this.container.current) {\r\n      console.log(\"Container not ready\");\r\n      return;\r\n    }\r\n\r\n    // If we already have the same image loaded, don't reload\r\n    if (this.backgroundImage?.src.endsWith(backgroundImage || '')) {\r\n      console.log(\"Image already loaded\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"Setting up background, image data present:\", !!backgroundImage);\r\n\r\n    // Clear existing canvas if any\r\n    if (this.backgroundCanvas) {\r\n      console.log(\"Removing existing canvas\");\r\n      this.backgroundCanvas.remove();\r\n      this.backgroundCanvas = null;\r\n    }\r\n\r\n    if (backgroundImage) {\r\n      console.log(\"Creating new canvas\");\r\n      this.backgroundCanvas = document.createElement('canvas');\r\n      this.backgroundCanvas.style.position = 'absolute';\r\n      this.backgroundCanvas.style.left = '0px';\r\n      this.backgroundCanvas.style.top = '0px';\r\n      this.backgroundCanvas.style.zIndex = '-1';\r\n      \r\n      this.backgroundCanvas.width = this.container.current.clientWidth;\r\n      this.backgroundCanvas.height = this.container.current.clientHeight;\r\n      console.log(\"Canvas size:\", this.backgroundCanvas.width, this.backgroundCanvas.height);\r\n      \r\n      this.container.current.appendChild(this.backgroundCanvas);\r\n\r\n      const img = new Image();\r\n      \r\n      img.onload = () => {\r\n        console.log(\"Image loaded successfully\");\r\n        if (img === this.backgroundImage) {\r\n          console.log(\"Image size:\", img.width, img.height);\r\n          // Only start render if this is still the current image\r\n          this.startBackgroundRender();\r\n        }\r\n      };\r\n\r\n      img.onerror = (e) => {\r\n        console.error(\"Error loading image:\", e);\r\n      };\r\n      \r\n      const imageUrl = backgroundImage.startsWith('data:image/')\r\n        ? backgroundImage\r\n        : `data:image/png;base64,${backgroundImage}`;\r\n      \r\n      // Set the image before setting the source to prevent race conditions\r\n      this.backgroundImage = img;\r\n      img.src = imageUrl;\r\n    }\r\n}\r\n\r\n  private renderBackground = () => {\r\n    // Cancel any existing animation frame before starting new one\r\n    if (this.animationFrameId !== null) {\r\n      cancelAnimationFrame(this.animationFrameId);\r\n      this.animationFrameId = null;\r\n    }\r\n\r\n    if (!this.backgroundCanvas || !this.backgroundImage || !this.state.network) {\r\n      return;\r\n    }\r\n    \r\n    const ctx = this.backgroundCanvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    const position = this.state.network.getViewPosition();\r\n    const scale = this.state.network.getScale();\r\n\r\n    const srcWidth = this.backgroundCanvas.width / scale;\r\n    const srcHeight = this.backgroundCanvas.height / scale;\r\n    const imgCenterX = ((this.backgroundImage.width / 2) - srcWidth / 2) + position.x;\r\n    const imgCenterY = ((this.backgroundImage.height / 2) - srcHeight / 2) + position.y;\r\n\r\n    ctx.clearRect(0, 0, this.backgroundCanvas.width, this.backgroundCanvas.height);\r\n    \r\n    try {\r\n      ctx.drawImage(\r\n        this.backgroundImage,\r\n        imgCenterX,\r\n        imgCenterY,\r\n        srcWidth,\r\n        srcHeight,\r\n        0,\r\n        0,\r\n        this.backgroundCanvas.width,\r\n        this.backgroundCanvas.height\r\n      );\r\n    } catch (e) {\r\n      console.error(\"Error drawing background:\", e);\r\n    }\r\n\r\n    this.animationFrameId = requestAnimationFrame(this.renderBackground);\r\n};\r\n\r\n  private startBackgroundRender() {\r\n    console.log(\"Starting background render\");\r\n    if (this.animationFrameId !== null) {\r\n      cancelAnimationFrame(this.animationFrameId);\r\n    }\r\n    this.renderBackground();\r\n  }\r\n\r\n  private setupNetwork() {\r\n    if (!this.container.current) return;\r\n\r\n    const props = this.props.args as NetworkProps;\r\n\r\n    // Clear existing network\r\n    if (this.state.network) {\r\n      this.state.network.destroy();\r\n    }\r\n\r\n    // Create new datasets\r\n    const nodes = new DataSet(props.nodes);\r\n    const edges = new DataSet(props.edges);\r\n\r\n    // Create network with merged options\r\n    const network = new Network(\r\n      this.container.current,\r\n      { nodes, edges },\r\n      {\r\n        ...props.options,\r\n        height: '600px',\r\n        autoResize: true,\r\n        layout: {\r\n          randomSeed: 1,\r\n          improvedLayout: true\r\n        }\r\n      }\r\n    );\r\n\r\n    // Set up event handlers\r\n    network.on('select', (params) => {\r\n      Streamlit.setComponentValue({\r\n        selected: params.nodes,\r\n        positions: this.getNodePositions()\r\n      });\r\n    });\r\n\r\n    network.on('dragEnd', () => {\r\n      Streamlit.setComponentValue({\r\n        selected: network.getSelectedNodes(),\r\n        positions: this.getNodePositions()\r\n      });\r\n    });\r\n\r\n    this.setState({ network, nodes, edges }, () => {\r\n      if (props.background_image) {\r\n        this.setupBackground(props.background_image);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getNodePositions() {\r\n    if (!this.state.network || !this.state.nodes) return {};\r\n    \r\n    const positions: { [key: string]: { x: number, y: number } } = {};\r\n    this.state.nodes.forEach((node) => {\r\n      const pos = this.state.network!.getPosition(node.id);\r\n      positions[node.id] = { x: pos.x, y: pos.y };\r\n    });\r\n    \r\n    return positions;\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div\r\n        ref={this.container}\r\n        style={{\r\n          width: '100%',\r\n          height: '600px',\r\n          minHeight: '600px',\r\n          border: '1px solid #ddd',\r\n          borderRadius: '4px',\r\n          backgroundColor: '#ffffff',\r\n          position: 'relative',\r\n          overflow: 'hidden'\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(VisNetwork);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}