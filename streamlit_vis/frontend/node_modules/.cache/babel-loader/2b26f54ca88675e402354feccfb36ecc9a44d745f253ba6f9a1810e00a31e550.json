{"ast":null,"code":"import React from'react';import{Network}from'vis-network';import{DataSet}from'vis-data';import{Streamlit,StreamlitComponentBase,withStreamlitConnection}from\"streamlit-component-lib\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class VisNetwork extends StreamlitComponentBase{constructor(){super(...arguments);this.container=/*#__PURE__*/React.createRef();this.networkContainer=/*#__PURE__*/React.createRef();this.backgroundContainer=/*#__PURE__*/React.createRef();this.backgroundImage=null;this.state={network:null,nodes:new DataSet([]),edges:new DataSet([]),shouldShowBackground:false,backgroundSrc:''};}componentDidMount(){console.log(\"Component mounted\");Streamlit.setFrameHeight(600);this.setupNetwork();}componentDidUpdate(){const props=this.props.args;const nodes=new DataSet(props.nodes);const edges=new DataSet(props.edges);if(this.state.network){this.state.network.setData({nodes,edges});}// Handle background image changes\nif(props.background_image&&props.background_image!==this.state.backgroundSrc){console.log(\"New background image detected:\",props.background_image.substring(0,100)+\"...\");this.setState({shouldShowBackground:true,backgroundSrc:props.background_image});}}componentWillUnmount(){if(this.state.network){this.state.network.destroy();}}setupNetwork(){if(!this.networkContainer.current){console.error(\"Network container not found\");return;}const props=this.props.args;const nodes=new DataSet(props.nodes);const edges=new DataSet(props.edges);const network=new Network(this.networkContainer.current,{nodes,edges},{...props.options,height:'600px'});network.on('select',params=>{Streamlit.setComponentValue({selected:params.nodes,positions:this.getNodePositions(network,nodes)});});network.on('dragEnd',()=>{Streamlit.setComponentValue({selected:network.getSelectedNodes(),positions:this.getNodePositions(network,nodes)});});this.setState({network,nodes,edges});}getNodePositions(network,nodes){const positions={};nodes.forEach(node=>{const pos=network.getPosition(node.id);positions[node.id]={x:pos.x,y:pos.y};});return positions;}render(){const props=this.props.args;console.log(\"Rendering with background:\",this.state.shouldShowBackground);return/*#__PURE__*/_jsxs(\"div\",{ref:this.container,style:{width:'100%',height:'600px',border:'1px solid #ddd',position:'relative',overflow:'hidden',backgroundColor:'#ffffff'},children:[this.state.shouldShowBackground&&/*#__PURE__*/_jsx(\"div\",{ref:this.backgroundContainer,style:{position:'absolute',top:0,left:0,width:'100%',height:'100%',zIndex:0,opacity:0.3,pointerEvents:'none',display:'flex',justifyContent:'center',alignItems:'center',overflow:'hidden'},children:/*#__PURE__*/_jsx(\"img\",{src:this.state.backgroundSrc,style:{width:'100%',height:'100%',objectFit:'contain'},alt:\"Background\",onLoad:()=>{console.log(\"Background image loaded successfully\");},onError:e=>{console.error(\"Error loading background image:\",e);console.error(\"Image source:\",this.state.backgroundSrc.substring(0,100)+\"...\");}})}),/*#__PURE__*/_jsx(\"div\",{ref:this.networkContainer,style:{position:'relative',width:'100%',height:'100%',zIndex:1}})]});}}export default withStreamlitConnection(VisNetwork);","map":{"version":3,"names":["React","Network","DataSet","Streamlit","StreamlitComponentBase","withStreamlitConnection","jsx","_jsx","jsxs","_jsxs","VisNetwork","constructor","arguments","container","createRef","networkContainer","backgroundContainer","backgroundImage","state","network","nodes","edges","shouldShowBackground","backgroundSrc","componentDidMount","console","log","setFrameHeight","setupNetwork","componentDidUpdate","props","args","setData","background_image","substring","setState","componentWillUnmount","destroy","current","error","options","height","on","params","setComponentValue","selected","positions","getNodePositions","getSelectedNodes","forEach","node","pos","getPosition","id","x","y","render","ref","style","width","border","position","overflow","backgroundColor","children","top","left","zIndex","opacity","pointerEvents","display","justifyContent","alignItems","src","objectFit","alt","onLoad","onError","e"],"sources":["C:/Users/owner/Documents/Innovative Dev/Sensor Sentry GUI - Streamlit/streamlit_vis/frontend/src/VisNetwork.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Network } from 'vis-network';\r\nimport { DataSet } from 'vis-data';\r\nimport {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\n\r\ninterface NetworkProps {\r\n  nodes: any[];\r\n  edges: any[];\r\n  options: any;\r\n  background_image?: string;\r\n  height?: string;\r\n}\r\n\r\ninterface State {\r\n  network: Network | null;\r\n  nodes: DataSet<any>;\r\n  edges: DataSet<any>;\r\n  shouldShowBackground: boolean;\r\n  backgroundSrc: string;\r\n}\r\n\r\nclass VisNetwork extends StreamlitComponentBase<State> {\r\n  private container = React.createRef<HTMLDivElement>();\r\n  private networkContainer = React.createRef<HTMLDivElement>();\r\n  private backgroundContainer = React.createRef<HTMLDivElement>();\r\n  private backgroundImage: HTMLImageElement | null = null;\r\n  \r\n  public state: State = {\r\n    network: null,\r\n    nodes: new DataSet([]),\r\n    edges: new DataSet([]),\r\n    shouldShowBackground: false,\r\n    backgroundSrc: ''\r\n  };\r\n\r\n  public componentDidMount() {\r\n    console.log(\"Component mounted\");\r\n    Streamlit.setFrameHeight(600);\r\n    this.setupNetwork();\r\n  }\r\n\r\n  public componentDidUpdate() {\r\n    const props = this.props.args as NetworkProps;\r\n    const nodes = new DataSet(props.nodes);\r\n    const edges = new DataSet(props.edges);\r\n    \r\n    if (this.state.network) {\r\n      this.state.network.setData({ nodes, edges });\r\n    }\r\n\r\n    // Handle background image changes\r\n    if (props.background_image && props.background_image !== this.state.backgroundSrc) {\r\n      console.log(\"New background image detected:\", props.background_image.substring(0, 100) + \"...\");\r\n      this.setState({\r\n        shouldShowBackground: true,\r\n        backgroundSrc: props.background_image\r\n      });\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.state.network) {\r\n      this.state.network.destroy();\r\n    }\r\n  }\r\n\r\n  private setupNetwork() {\r\n    if (!this.networkContainer.current) {\r\n      console.error(\"Network container not found\");\r\n      return;\r\n    }\r\n\r\n    const props = this.props.args as NetworkProps;\r\n    const nodes = new DataSet(props.nodes);\r\n    const edges = new DataSet(props.edges);\r\n\r\n    const network = new Network(\r\n      this.networkContainer.current,\r\n      { nodes, edges },\r\n      {\r\n        ...props.options,\r\n        height: '600px',\r\n      }\r\n    );\r\n\r\n    network.on('select', (params) => {\r\n      Streamlit.setComponentValue({\r\n        selected: params.nodes,\r\n        positions: this.getNodePositions(network, nodes)\r\n      });\r\n    });\r\n\r\n    network.on('dragEnd', () => {\r\n      Streamlit.setComponentValue({\r\n        selected: network.getSelectedNodes(),\r\n        positions: this.getNodePositions(network, nodes)\r\n      });\r\n    });\r\n\r\n    this.setState({ network, nodes, edges });\r\n  }\r\n\r\n  private getNodePositions(network: Network, nodes: DataSet<any>) {\r\n    const positions: { [key: string]: { x: number, y: number } } = {};\r\n    nodes.forEach((node) => {\r\n      const pos = network.getPosition(node.id);\r\n      positions[node.id] = { x: pos.x, y: pos.y };\r\n    });\r\n    return positions;\r\n  }\r\n\r\n  public render() {\r\n    const props = this.props.args as NetworkProps;\r\n    console.log(\"Rendering with background:\", this.state.shouldShowBackground);\r\n    \r\n    return (\r\n      <div\r\n        ref={this.container}\r\n        style={{\r\n          width: '100%',\r\n          height: '600px',\r\n          border: '1px solid #ddd',\r\n          position: 'relative',\r\n          overflow: 'hidden',\r\n          backgroundColor: '#ffffff'\r\n        }}\r\n      >\r\n        {this.state.shouldShowBackground && (\r\n          <div \r\n            ref={this.backgroundContainer}\r\n            style={{\r\n              position: 'absolute',\r\n              top: 0,\r\n              left: 0,\r\n              width: '100%',\r\n              height: '100%',\r\n              zIndex: 0,\r\n              opacity: 0.3,\r\n              pointerEvents: 'none',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              overflow: 'hidden'\r\n            }}\r\n          >\r\n            <img \r\n              src={this.state.backgroundSrc}\r\n              style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                objectFit: 'contain'\r\n              }}\r\n              alt=\"Background\"\r\n              onLoad={() => {\r\n                console.log(\"Background image loaded successfully\");\r\n              }}\r\n              onError={(e) => {\r\n                console.error(\"Error loading background image:\", e);\r\n                console.error(\"Image source:\", this.state.backgroundSrc.substring(0, 100) + \"...\");\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n        <div \r\n          ref={this.networkContainer}\r\n          style={{\r\n            position: 'relative',\r\n            width: '100%',\r\n            height: '100%',\r\n            zIndex: 1\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(VisNetwork);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}