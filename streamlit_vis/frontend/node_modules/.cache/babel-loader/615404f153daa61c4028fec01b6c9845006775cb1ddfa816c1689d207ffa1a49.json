{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";class VisNetwork extends StreamlitComponentBase{constructor(){super(...arguments);this.container=React.createRef();this.state={network:null,nodes:new DataSet([]),edges:new DataSet([])};}componentDidMount(){console.log(\"Component mounted\");Streamlit.setFrameHeight(600);this.setupNetwork();}componentDidUpdate(){const props=this.props.args;const nodes=new DataSet(props.nodes);const edges=new DataSet(props.edges);if(this.state.network){this.state.network.setData({nodes,edges});}}componentWillUnmount(){if(this.state.network){this.state.network.destroy();}}setupNetwork(){if(!this.container.current)return;const props=this.props.args;const nodes=new DataSet(props.nodes);const edges=new DataSet(props.edges);const network=new Network(this.container.current,{nodes,edges},props.options);network.on('select',params=>{Streamlit.setComponentValue({selected:params.nodes,positions:this.getNodePositions(network,nodes)});});network.on('dragEnd',()=>{Streamlit.setComponentValue({selected:network.getSelectedNodes(),positions:this.getNodePositions(network,nodes)});});this.setState({network,nodes,edges});}getNodePositions(network,nodes){const positions={};nodes.forEach(node=>{const pos=network.getPosition(node.id);positions[node.id]={x:pos.x,y:pos.y};});return positions;}render(){return/*#__PURE__*/_jsx(\"div\",{ref:this.container,style:{width:'100%',height:'600px'}});}}export default withStreamlitConnection(VisNetwork);","map":{"version":3,"names":["VisNetwork","StreamlitComponentBase","constructor","arguments","container","React","createRef","state","network","nodes","DataSet","edges","componentDidMount","console","log","Streamlit","setFrameHeight","setupNetwork","componentDidUpdate","props","args","setData","componentWillUnmount","destroy","current","Network","options","on","params","setComponentValue","selected","positions","getNodePositions","getSelectedNodes","setState","forEach","node","pos","getPosition","id","x","y","render","_jsx","ref","style","width","height","withStreamlitConnection"],"sources":["C:/Users/owner/Documents/Innovative Dev/Sensor Sentry GUI - Streamlit/streamlit_vis/frontend/src/VisNetwork.tsx"],"sourcesContent":["interface State {\r\n  network: Network | null;\r\n  nodes: DataSet<any>;\r\n  edges: DataSet<any>;\r\n}\r\n\r\nclass VisNetwork extends StreamlitComponentBase<State> {\r\n  private container = React.createRef<HTMLDivElement>();\r\n  \r\n  public state: State = {\r\n    network: null,\r\n    nodes: new DataSet([]),\r\n    edges: new DataSet([])\r\n  };\r\n\r\n  public componentDidMount() {\r\n    console.log(\"Component mounted\");\r\n    Streamlit.setFrameHeight(600);\r\n    this.setupNetwork();\r\n  }\r\n\r\n  public componentDidUpdate() {\r\n    const props = this.props.args as NetworkProps;\r\n    const nodes = new DataSet(props.nodes);\r\n    const edges = new DataSet(props.edges);\r\n    \r\n    if (this.state.network) {\r\n      this.state.network.setData({ nodes, edges });\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.state.network) {\r\n      this.state.network.destroy();\r\n    }\r\n  }\r\n\r\n  private setupNetwork() {\r\n    if (!this.container.current) return;\r\n\r\n    const props = this.props.args as NetworkProps;\r\n    const nodes = new DataSet(props.nodes);\r\n    const edges = new DataSet(props.edges);\r\n\r\n    const network = new Network(\r\n      this.container.current,\r\n      { nodes, edges },\r\n      props.options\r\n    );\r\n\r\n    network.on('select', (params) => {\r\n      Streamlit.setComponentValue({\r\n        selected: params.nodes,\r\n        positions: this.getNodePositions(network, nodes)\r\n      });\r\n    });\r\n\r\n    network.on('dragEnd', () => {\r\n      Streamlit.setComponentValue({\r\n        selected: network.getSelectedNodes(),\r\n        positions: this.getNodePositions(network, nodes)\r\n      });\r\n    });\r\n\r\n    this.setState({ network, nodes, edges });\r\n  }\r\n\r\n  private getNodePositions(network: Network, nodes: DataSet<any>) {\r\n    const positions: { [key: string]: { x: number, y: number } } = {};\r\n    nodes.forEach((node) => {\r\n      const pos = network.getPosition(node.id);\r\n      positions[node.id] = { x: pos.x, y: pos.y };\r\n    });\r\n    return positions;\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div\r\n        ref={this.container}\r\n        style={{\r\n          width: '100%',\r\n          height: '600px'\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(VisNetwork);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}