{"ast":null,"code":"//streamlit_vis/frontend/src/VisNetwork.tsx\nimport React from'react';import{Network}from'vis-network';import{DataSet}from'vis-data';import{Streamlit,StreamlitComponentBase,withStreamlitConnection}from\"streamlit-component-lib\";import{jsx as _jsx}from\"react/jsx-runtime\";class VisNetwork extends StreamlitComponentBase{constructor(){super(...arguments);this.container=/*#__PURE__*/React.createRef();this.state={network:null,nodes:new DataSet([]),edges:new DataSet([]),prevProps:null};}componentDidMount(){Streamlit.setFrameHeight(600);this.setupNetwork();}componentDidUpdate(){const props=this.props.args;const prevProps=this.state.prevProps;// Only update if props actually changed\nif(prevProps===null||JSON.stringify(prevProps.nodes)!==JSON.stringify(props.nodes)||JSON.stringify(prevProps.edges)!==JSON.stringify(props.edges)||prevProps.background_image!==props.background_image){if(props.background_image!==(prevProps===null||prevProps===void 0?void 0:prevProps.background_image)){this.updateBackgroundImage();}else{this.setupNetwork();}// Update prevProps in state\nthis.setState({prevProps:props});}}setupNetwork(){if(!this.container.current)return;const props=this.props.args;// Clear existing network\nif(this.state.network){this.state.network.destroy();}// Create new datasets\nconst nodes=new DataSet(props.nodes);const edges=new DataSet(props.edges);// Enhanced network options\nconst networkOptions={...props.options,height:'600px',autoResize:true,physics:{enabled:false,// Disable physics\nstabilization:{enabled:false// Disable stabilization\n}},interaction:{dragView:true,zoomView:true,dragNodes:true,selectable:true,multiselect:true,hover:true}};// Create network\nconst network=new Network(this.container.current,{nodes,edges},networkOptions);// Event handlers\nnetwork.on('select',params=>{Streamlit.setComponentValue({selected:params.nodes,positions:this.getNodePositions()});});network.on('dragStart',()=>{// Disable viewport manipulation during drag\nconst currentViewPosition=network.getViewPosition();const currentScale=network.getScale();network.setOptions({interaction:{dragView:false,zoomView:false}});});network.on('dragEnd',()=>{// Re-enable viewport manipulation after drag\nnetwork.setOptions({interaction:{dragView:true,zoomView:true}});// Send position update without triggering viewport change\nsetTimeout(()=>{Streamlit.setComponentValue({selected:network.getSelectedNodes(),positions:this.getNodePositions()});},0);});// Only fit on initial load\nif(!this.state.network){network.once('afterDrawing',()=>{network.fit();});}this.setState({network,nodes,edges});}getNodePositions(){if(!this.state.network||!this.state.nodes)return{};const positions={};this.state.nodes.forEach(node=>{const pos=this.state.network.getPosition(node.id);positions[node.id]={x:pos.x,y:pos.y};});return positions;}updateBackgroundImage(){if(!this.container.current)return;const props=this.props.args;if(props.background_image){// Create a wrapper div for background if it doesn't exist\nlet bgDiv=this.container.current.querySelector('.network-background');if(!bgDiv){bgDiv=document.createElement('div');bgDiv.className='network-background';bgDiv.style.position='absolute';bgDiv.style.top='0';bgDiv.style.left='0';bgDiv.style.right='0';bgDiv.style.bottom='0';bgDiv.style.zIndex='-1';this.container.current.insertBefore(bgDiv,this.container.current.firstChild);}// Add the data URL prefix if not present\nconst imageUrl=props.background_image.startsWith('data:image/')?props.background_image:`data:image/png;base64,${props.background_image}`;bgDiv.style.backgroundImage=`url(${imageUrl})`;bgDiv.style.backgroundSize='cover';bgDiv.style.backgroundPosition='center';bgDiv.style.opacity='0.3';// Make background subtle\n}else{// Remove background div if it exists\nconst bgDiv=this.container.current.querySelector('.network-background');if(bgDiv){bgDiv.remove();}}}render(){return/*#__PURE__*/_jsx(\"div\",{ref:this.container,style:{width:'100%',height:'600px',minHeight:'600px',border:'1px solid #ddd',borderRadius:'4px',backgroundColor:'#ffffff',position:'relative',overflow:'hidden'}});}}export default withStreamlitConnection(VisNetwork);","map":{"version":3,"names":["React","Network","DataSet","Streamlit","StreamlitComponentBase","withStreamlitConnection","jsx","_jsx","VisNetwork","constructor","arguments","container","createRef","state","network","nodes","edges","prevProps","componentDidMount","setFrameHeight","setupNetwork","componentDidUpdate","props","args","JSON","stringify","background_image","updateBackgroundImage","setState","current","destroy","networkOptions","options","height","autoResize","physics","enabled","stabilization","interaction","dragView","zoomView","dragNodes","selectable","multiselect","hover","on","params","setComponentValue","selected","positions","getNodePositions","currentViewPosition","getViewPosition","currentScale","getScale","setOptions","setTimeout","getSelectedNodes","once","fit","forEach","node","pos","getPosition","id","x","y","bgDiv","querySelector","document","createElement","className","style","position","top","left","right","bottom","zIndex","insertBefore","firstChild","imageUrl","startsWith","backgroundImage","backgroundSize","backgroundPosition","opacity","remove","render","ref","width","minHeight","border","borderRadius","backgroundColor","overflow"],"sources":["C:/Users/owner/Documents/Innovative Dev/Sensor Sentry GUI - Streamlit/streamlit_vis/frontend/src/VisNetwork.tsx"],"sourcesContent":["//streamlit_vis/frontend/src/VisNetwork.tsx\r\n\r\nimport React from 'react';\r\nimport { Network } from 'vis-network';\r\nimport { DataSet } from 'vis-data';\r\nimport {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\n\r\ninterface NetworkProps {\r\n  nodes: any[];\r\n  edges: any[];\r\n  options: any;\r\n  background_image?: string;\r\n  height?: string;\r\n}\r\n\r\ninterface State {\r\n  network: Network | null;\r\n  nodes: DataSet<any>;\r\n  edges: DataSet<any>;\r\n  prevProps: NetworkProps | null;\r\n}\r\n\r\nclass VisNetwork extends StreamlitComponentBase<State> {\r\n  private container = React.createRef<HTMLDivElement>();\r\n  \r\n  public state: State = {\r\n    network: null,\r\n    nodes: new DataSet([]),\r\n    edges: new DataSet([]),\r\n    prevProps: null\r\n  };\r\n\r\n  public componentDidMount() {\r\n    Streamlit.setFrameHeight(600);\r\n    this.setupNetwork();\r\n  }\r\n\r\n  public componentDidUpdate() {\r\n    const props = this.props.args as NetworkProps;\r\n    const prevProps = this.state.prevProps;\r\n\r\n    // Only update if props actually changed\r\n    if (prevProps === null || \r\n        JSON.stringify(prevProps.nodes) !== JSON.stringify(props.nodes) ||\r\n        JSON.stringify(prevProps.edges) !== JSON.stringify(props.edges) ||\r\n        prevProps.background_image !== props.background_image) {\r\n      \r\n      if (props.background_image !== prevProps?.background_image) {\r\n        this.updateBackgroundImage();\r\n      } else {\r\n        this.setupNetwork();\r\n      }\r\n      \r\n      // Update prevProps in state\r\n      this.setState({ prevProps: props });\r\n    }\r\n  }\r\n\r\n  private setupNetwork() {\r\n    if (!this.container.current) return;\r\n\r\n    const props = this.props.args as NetworkProps;\r\n\r\n    // Clear existing network\r\n    if (this.state.network) {\r\n        this.state.network.destroy();\r\n    }\r\n\r\n    // Create new datasets\r\n    const nodes = new DataSet(props.nodes);\r\n    const edges = new DataSet(props.edges);\r\n\r\n    // Enhanced network options\r\n    const networkOptions = {\r\n        ...props.options,\r\n        height: '600px',\r\n        autoResize: true,\r\n        physics: {\r\n            enabled: false,  // Disable physics\r\n            stabilization: {\r\n                enabled: false  // Disable stabilization\r\n            }\r\n        },\r\n        interaction: {\r\n            dragView: true,\r\n            zoomView: true,\r\n            dragNodes: true,\r\n            selectable: true,\r\n            multiselect: true,\r\n            hover: true\r\n        }\r\n    };\r\n\r\n    // Create network\r\n    const network = new Network(\r\n        this.container.current,\r\n        { nodes, edges },\r\n        networkOptions\r\n    );\r\n\r\n    // Event handlers\r\n    network.on('select', (params) => {\r\n        Streamlit.setComponentValue({\r\n            selected: params.nodes,\r\n            positions: this.getNodePositions()\r\n        });\r\n    });\r\n\r\n    network.on('dragStart', () => {\r\n        // Disable viewport manipulation during drag\r\n        const currentViewPosition = network.getViewPosition();\r\n        const currentScale = network.getScale();\r\n        network.setOptions({\r\n            interaction: {\r\n                dragView: false,\r\n                zoomView: false\r\n            }\r\n        });\r\n    });\r\n\r\n    network.on('dragEnd', () => {\r\n        // Re-enable viewport manipulation after drag\r\n        network.setOptions({\r\n            interaction: {\r\n                dragView: true,\r\n                zoomView: true\r\n            }\r\n        });\r\n        \r\n        // Send position update without triggering viewport change\r\n        setTimeout(() => {\r\n            Streamlit.setComponentValue({\r\n                selected: network.getSelectedNodes(),\r\n                positions: this.getNodePositions()\r\n            });\r\n        }, 0);\r\n    });\r\n\r\n    // Only fit on initial load\r\n    if (!this.state.network) {\r\n        network.once('afterDrawing', () => {\r\n            network.fit();\r\n        });\r\n    }\r\n\r\n    this.setState({ network, nodes, edges });\r\n  }\r\n\r\n  private getNodePositions() {\r\n    if (!this.state.network || !this.state.nodes) return {};\r\n    \r\n    const positions: { [key: string]: { x: number, y: number } } = {};\r\n    this.state.nodes.forEach((node) => {\r\n      const pos = this.state.network!.getPosition(node.id);\r\n      positions[node.id] = { x: pos.x, y: pos.y };\r\n    });\r\n    \r\n    return positions;\r\n  }\r\n\r\n  private updateBackgroundImage() {\r\n    if (!this.container.current) return;\r\n\r\n    const props = this.props.args as NetworkProps;\r\n    if (props.background_image) {\r\n        // Create a wrapper div for background if it doesn't exist\r\n        let bgDiv = this.container.current.querySelector('.network-background') as HTMLDivElement;\r\n        if (!bgDiv) {\r\n            bgDiv = document.createElement('div');\r\n            bgDiv.className = 'network-background';\r\n            bgDiv.style.position = 'absolute';\r\n            bgDiv.style.top = '0';\r\n            bgDiv.style.left = '0';\r\n            bgDiv.style.right = '0';\r\n            bgDiv.style.bottom = '0';\r\n            bgDiv.style.zIndex = '-1';\r\n            this.container.current.insertBefore(bgDiv, this.container.current.firstChild);\r\n        }\r\n        \r\n        // Add the data URL prefix if not present\r\n        const imageUrl = props.background_image.startsWith('data:image/') \r\n            ? props.background_image \r\n            : `data:image/png;base64,${props.background_image}`;\r\n            \r\n        bgDiv.style.backgroundImage = `url(${imageUrl})`;\r\n        bgDiv.style.backgroundSize = 'cover';\r\n        bgDiv.style.backgroundPosition = 'center';\r\n        bgDiv.style.opacity = '0.3';  // Make background subtle\r\n    } else {\r\n        // Remove background div if it exists\r\n        const bgDiv = this.container.current.querySelector('.network-background');\r\n        if (bgDiv) {\r\n            bgDiv.remove();\r\n        }\r\n    }\r\n  }\r\n\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={this.container}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: '600px',\r\n\t\t\t\t\tminHeight: '600px',\r\n\t\t\t\t\tborder: '1px solid #ddd',\r\n\t\t\t\t\tborderRadius: '4px',\r\n\t\t\t\t\tbackgroundColor: '#ffffff',\r\n\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\toverflow: 'hidden'\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStreamlitConnection(VisNetwork);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}