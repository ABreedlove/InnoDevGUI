{"ast":null,"code":"import React from'react';import{Network}from'vis-network';import{DataSet}from'vis-data';import{Streamlit,StreamlitComponentBase,withStreamlitConnection}from\"streamlit-component-lib\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class VisNetwork extends StreamlitComponentBase{constructor(){super(...arguments);this.container=/*#__PURE__*/React.createRef();this.networkContainer=null;this.backgroundDiv=null;this.backgroundImage=null;this.state={network:null,nodes:new DataSet([]),edges:new DataSet([])};}componentDidMount(){console.log(\"Component mounted\");Streamlit.setFrameHeight(600);this.setupNetwork();}componentDidUpdate(){// Update nodes and edges when they change\nconst props=this.props.args;const nodes=new DataSet(props.nodes);const edges=new DataSet(props.edges);if(this.state.network){this.state.network.setData({nodes,edges});}// Check if background image changed\nif(props.background_image&&(!this.backgroundImage||this.backgroundImage.src!==props.background_image)){this.setupBackground(props.background_image);}}componentWillUnmount(){if(this.state.network){this.state.network.destroy();}}createNetworkContainer(){if(!this.container.current){console.log(\"Main container not ready\");return;}// Create a container for the network\nconst networkDiv=document.createElement('div');networkDiv.style.width='100%';networkDiv.style.height='100%';networkDiv.style.position='relative';networkDiv.style.zIndex='1';this.networkContainer=networkDiv;// Create a container for the background\nconst backgroundDiv=document.createElement('div');backgroundDiv.style.position='absolute';backgroundDiv.style.top='0';backgroundDiv.style.left='0';backgroundDiv.style.width='100%';backgroundDiv.style.height='100%';backgroundDiv.style.zIndex='0';backgroundDiv.style.pointerEvents='none';this.backgroundDiv=backgroundDiv;// Add both to the main container\nthis.container.current.appendChild(backgroundDiv);this.container.current.appendChild(networkDiv);}setupNetwork(){const networkDiv=document.getElementById('network-container');if(!networkDiv){console.error(\"Network container not found\");return;}const props=this.props.args;const nodes=new DataSet(props.nodes);const edges=new DataSet(props.edges);const network=new Network(networkDiv,{nodes,edges},{...props.options,height:'600px'});network.on('select',params=>{Streamlit.setComponentValue({selected:params.nodes,positions:this.getNodePositions(network,nodes)});});network.on('dragEnd',()=>{Streamlit.setComponentValue({selected:network.getSelectedNodes(),positions:this.getNodePositions(network,nodes)});});this.setState({network,nodes,edges});}setupBackground(backgroundImage){console.log(\"Setting up background with image data length:\",backgroundImage.length);if(!this.backgroundDiv){console.error(\"Background div not ready\");return;}// Clear existing background\nthis.backgroundDiv.innerHTML='';// Create a container div for positioning\nconst container=document.createElement('div');container.style.position='absolute';container.style.top='0';container.style.left='0';container.style.right='0';container.style.bottom='0';container.style.display='flex';container.style.justifyContent='center';container.style.alignItems='center';container.style.overflow='hidden';// Create and setup image\nconst img=document.createElement('img');img.style.width='100%';img.style.height='100%';img.style.objectFit='contain';img.style.opacity='0.3';// Log all steps\nconsole.log(\"Created image element\");img.onload=()=>{console.log(\"Image loaded successfully\",{width:img.width,height:img.height,naturalWidth:img.naturalWidth,naturalHeight:img.naturalHeight});};img.onerror=error=>{console.error(\"Error loading image:\",{error,src:img.src.substring(0,100)+'...'// Log truncated src for debugging\n});};try{img.src=backgroundImage;container.appendChild(img);this.backgroundDiv.appendChild(container);console.log(\"Added image to DOM\");}catch(error){console.error(\"Error setting up background:\",error);}}getNodePositions(network,nodes){const positions={};nodes.forEach(node=>{const pos=network.getPosition(node.id);positions[node.id]={x:pos.x,y:pos.y};});return positions;}render(){const props=this.props.args;return/*#__PURE__*/_jsxs(\"div\",{ref:this.container,style:{width:'100%',height:'600px',border:'1px solid #ddd',position:'relative',overflow:'hidden',backgroundColor:'#ffffff'},children:[props.background_image&&/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:0,left:0,width:'100%',height:'100%',zIndex:0,opacity:0.3,pointerEvents:'none'},children:/*#__PURE__*/_jsx(\"img\",{src:props.background_image,style:{width:'100%',height:'100%',objectFit:'contain'},alt:\"Background\"})}),/*#__PURE__*/_jsx(\"div\",{id:\"network-container\",style:{position:'relative',width:'100%',height:'100%',zIndex:1},ref:this.networkContainer})]});}}export default withStreamlitConnection(VisNetwork);","map":{"version":3,"names":["React","Network","DataSet","Streamlit","StreamlitComponentBase","withStreamlitConnection","jsx","_jsx","jsxs","_jsxs","VisNetwork","constructor","arguments","container","createRef","networkContainer","backgroundDiv","backgroundImage","state","network","nodes","edges","componentDidMount","console","log","setFrameHeight","setupNetwork","componentDidUpdate","props","args","setData","background_image","src","setupBackground","componentWillUnmount","destroy","createNetworkContainer","current","networkDiv","document","createElement","style","width","height","position","zIndex","top","left","pointerEvents","appendChild","getElementById","error","options","on","params","setComponentValue","selected","positions","getNodePositions","getSelectedNodes","setState","length","innerHTML","right","bottom","display","justifyContent","alignItems","overflow","img","objectFit","opacity","onload","naturalWidth","naturalHeight","onerror","substring","forEach","node","pos","getPosition","id","x","y","render","ref","border","backgroundColor","children","alt"],"sources":["C:/Users/owner/Documents/Innovative Dev/Sensor Sentry GUI - Streamlit/streamlit_vis/frontend/src/VisNetwork.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Network } from 'vis-network';\r\nimport { DataSet } from 'vis-data';\r\nimport {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\n\r\ninterface NetworkProps {\r\n  nodes: any[];\r\n  edges: any[];\r\n  options: any;\r\n  background_image?: string;\r\n  height?: string;\r\n}\r\n\r\ninterface State {\r\n  network: Network | null;\r\n  nodes: DataSet<any>;\r\n  edges: DataSet<any>;\r\n}\r\n\r\nclass VisNetwork extends StreamlitComponentBase<State> {\r\n  private container = React.createRef<HTMLDivElement>();\r\n  private networkContainer: HTMLDivElement | null = null;\r\n  private backgroundDiv: HTMLDivElement | null = null;\r\n  private backgroundImage: HTMLImageElement | null = null;\r\n\r\n  public state: State = {\r\n    network: null,\r\n    nodes: new DataSet([]),\r\n    edges: new DataSet([])\r\n  };\r\n\r\n  public componentDidMount() {\r\n    console.log(\"Component mounted\");\r\n    Streamlit.setFrameHeight(600);\r\n    this.setupNetwork();\r\n  }\r\n\r\n  public componentDidUpdate() {\r\n    // Update nodes and edges when they change\r\n    const props = this.props.args as NetworkProps;\r\n    const nodes = new DataSet(props.nodes);\r\n    const edges = new DataSet(props.edges);\r\n    \r\n    if (this.state.network) {\r\n      this.state.network.setData({ nodes, edges });\r\n    }\r\n\r\n    // Check if background image changed\r\n    if (props.background_image && (!this.backgroundImage || this.backgroundImage.src !== props.background_image)) {\r\n      this.setupBackground(props.background_image);\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.state.network) {\r\n      this.state.network.destroy();\r\n    }\r\n  }\r\n\r\n  private createNetworkContainer() {\r\n    if (!this.container.current) {\r\n      console.log(\"Main container not ready\");\r\n      return;\r\n    }\r\n\r\n    // Create a container for the network\r\n    const networkDiv = document.createElement('div');\r\n    networkDiv.style.width = '100%';\r\n    networkDiv.style.height = '100%';\r\n    networkDiv.style.position = 'relative';\r\n    networkDiv.style.zIndex = '1';\r\n    this.networkContainer = networkDiv;\r\n\r\n    // Create a container for the background\r\n    const backgroundDiv = document.createElement('div');\r\n    backgroundDiv.style.position = 'absolute';\r\n    backgroundDiv.style.top = '0';\r\n    backgroundDiv.style.left = '0';\r\n    backgroundDiv.style.width = '100%';\r\n    backgroundDiv.style.height = '100%';\r\n    backgroundDiv.style.zIndex = '0';\r\n    backgroundDiv.style.pointerEvents = 'none';\r\n    this.backgroundDiv = backgroundDiv;\r\n\r\n    // Add both to the main container\r\n    this.container.current.appendChild(backgroundDiv);\r\n    this.container.current.appendChild(networkDiv);\r\n  }\r\n\r\n  private setupNetwork() {\r\n    const networkDiv = document.getElementById('network-container');\r\n    if (!networkDiv) {\r\n      console.error(\"Network container not found\");\r\n      return;\r\n    }\r\n\r\n    const props = this.props.args as NetworkProps;\r\n    const nodes = new DataSet(props.nodes);\r\n    const edges = new DataSet(props.edges);\r\n\r\n    const network = new Network(\r\n      networkDiv,\r\n      { nodes, edges },\r\n      {\r\n        ...props.options,\r\n        height: '600px',\r\n      }\r\n    );\r\n\r\n    network.on('select', (params) => {\r\n      Streamlit.setComponentValue({\r\n        selected: params.nodes,\r\n        positions: this.getNodePositions(network, nodes)\r\n      });\r\n    });\r\n\r\n    network.on('dragEnd', () => {\r\n      Streamlit.setComponentValue({\r\n        selected: network.getSelectedNodes(),\r\n        positions: this.getNodePositions(network, nodes)\r\n      });\r\n    });\r\n\r\n    this.setState({ network, nodes, edges });\r\n  }\r\n\r\n\r\n  private setupBackground(backgroundImage: string) {\r\n    console.log(\"Setting up background with image data length:\", backgroundImage.length);\r\n    \r\n    if (!this.backgroundDiv) {\r\n      console.error(\"Background div not ready\");\r\n      return;\r\n    }\r\n\r\n    // Clear existing background\r\n    this.backgroundDiv.innerHTML = '';\r\n\r\n    // Create a container div for positioning\r\n    const container = document.createElement('div');\r\n    container.style.position = 'absolute';\r\n    container.style.top = '0';\r\n    container.style.left = '0';\r\n    container.style.right = '0';\r\n    container.style.bottom = '0';\r\n    container.style.display = 'flex';\r\n    container.style.justifyContent = 'center';\r\n    container.style.alignItems = 'center';\r\n    container.style.overflow = 'hidden';\r\n\r\n    // Create and setup image\r\n    const img = document.createElement('img');\r\n    img.style.width = '100%';\r\n    img.style.height = '100%';\r\n    img.style.objectFit = 'contain';\r\n    img.style.opacity = '0.3';\r\n\r\n    // Log all steps\r\n    console.log(\"Created image element\");\r\n    \r\n    img.onload = () => {\r\n      console.log(\"Image loaded successfully\", {\r\n        width: img.width,\r\n        height: img.height,\r\n        naturalWidth: img.naturalWidth,\r\n        naturalHeight: img.naturalHeight\r\n      });\r\n    };\r\n\r\n    img.onerror = (error) => {\r\n      console.error(\"Error loading image:\", {\r\n        error,\r\n        src: img.src.substring(0, 100) + '...' // Log truncated src for debugging\r\n      });\r\n    };\r\n\r\n    try {\r\n      img.src = backgroundImage;\r\n      container.appendChild(img);\r\n      this.backgroundDiv.appendChild(container);\r\n      console.log(\"Added image to DOM\");\r\n    } catch (error) {\r\n      console.error(\"Error setting up background:\", error);\r\n    }\r\n  }\r\n\r\n  private getNodePositions(network: Network, nodes: DataSet<any>) {\r\n    const positions: { [key: string]: { x: number, y: number } } = {};\r\n    nodes.forEach((node) => {\r\n      const pos = network.getPosition(node.id);\r\n      positions[node.id] = { x: pos.x, y: pos.y };\r\n    });\r\n    return positions;\r\n  }\r\n\r\n  public render() {\r\n    const props = this.props.args as NetworkProps;\r\n    \r\n    return (\r\n      <div\r\n        ref={this.container}\r\n        style={{\r\n          width: '100%',\r\n          height: '600px',\r\n          border: '1px solid #ddd',\r\n          position: 'relative',\r\n          overflow: 'hidden',\r\n          backgroundColor: '#ffffff'\r\n        }}\r\n      >\r\n        {props.background_image && (\r\n          <div \r\n            style={{\r\n              position: 'absolute',\r\n              top: 0,\r\n              left: 0,\r\n              width: '100%',\r\n              height: '100%',\r\n              zIndex: 0,\r\n              opacity: 0.3,\r\n              pointerEvents: 'none'\r\n            }}\r\n          >\r\n            <img \r\n              src={props.background_image}\r\n              style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                objectFit: 'contain'\r\n              }}\r\n              alt=\"Background\"\r\n            />\r\n          </div>\r\n        )}\r\n        <div \r\n          id=\"network-container\"\r\n          style={{\r\n            position: 'relative',\r\n            width: '100%',\r\n            height: '100%',\r\n            zIndex: 1\r\n          }}\r\n          ref={this.networkContainer}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(VisNetwork);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}