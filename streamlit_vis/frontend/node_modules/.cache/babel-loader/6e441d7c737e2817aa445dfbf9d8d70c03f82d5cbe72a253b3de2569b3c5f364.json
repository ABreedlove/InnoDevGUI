{"ast":null,"code":"import React from'react';import{Network}from'vis-network';import{DataSet}from'vis-data';import{Streamlit,StreamlitComponentBase,withStreamlitConnection}from\"streamlit-component-lib\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class VisNetwork extends StreamlitComponentBase{constructor(){super(...arguments);this.container=/*#__PURE__*/React.createRef();this.networkContainer=/*#__PURE__*/React.createRef();this.backgroundCanvas=/*#__PURE__*/React.createRef();this.backgroundImage=null;this.animationFrame=null;this.state={network:null,nodes:new DataSet([]),edges:new DataSet([])};}componentDidMount(){console.log(\"Component mounted\");Streamlit.setFrameHeight(600);this.setupNetwork();}componentDidUpdate(){const props=this.props.args;// Handle network data updates\nif(this.state.network){const nodes=new DataSet(props.nodes);const edges=new DataSet(props.edges);this.state.network.setData({nodes,edges});}// Handle background image updates\nif(props.background_image&&(!this.backgroundImage||this.backgroundImage.src!==props.background_image)){this.setupBackgroundImage(props.background_image);}}componentWillUnmount(){if(this.state.network){this.state.network.destroy();}if(this.animationFrame){cancelAnimationFrame(this.animationFrame);}}setupBackgroundImage(imageUrl){const img=new Image();img.onload=()=>{console.log(\"Background image loaded\",{width:img.width,height:img.height});this.backgroundImage=img;this.startRenderLoop();};img.onerror=e=>{console.error(\"Error loading background image:\",e);};img.src=imageUrl;}renderBackground(){if(!this.backgroundCanvas.current||!this.backgroundImage||!this.state.network)return;const canvas=this.backgroundCanvas.current;const ctx=canvas.getContext('2d');if(!ctx)return;// Get current viewport state\nconst viewPosition=this.state.network.getViewPosition();const scale=this.state.network.getScale();// Clear canvas\nctx.clearRect(0,0,canvas.width,canvas.height);// Calculate image positioning\nconst containerRect=canvas.getBoundingClientRect();canvas.width=containerRect.width;canvas.height=containerRect.height;// Calculate dimensions that maintain aspect ratio\nconst imageAspect=this.backgroundImage.width/this.backgroundImage.height;const canvasAspect=canvas.width/canvas.height;let renderWidth=canvas.width;let renderHeight=canvas.height;if(canvasAspect>imageAspect){renderWidth=renderHeight*imageAspect;}else{renderHeight=renderWidth/imageAspect;}// Center position adjusted by network view position\nconst x=(canvas.width-renderWidth)/2-viewPosition.x*scale;const y=(canvas.height-renderHeight)/2-viewPosition.y*scale;// Draw image\ntry{ctx.drawImage(this.backgroundImage,x,y,renderWidth*scale,renderHeight*scale);}catch(error){console.error(\"Error rendering background:\",error);}this.animationFrame=requestAnimationFrame(()=>this.renderBackground());}startRenderLoop(){if(this.animationFrame){cancelAnimationFrame(this.animationFrame);}this.renderBackground();}setupNetwork(){if(!this.networkContainer.current)return;const props=this.props.args;const nodes=new DataSet(props.nodes);const edges=new DataSet(props.edges);const network=new Network(this.networkContainer.current,{nodes,edges},props.options);network.on('select',params=>{Streamlit.setComponentValue({selected:params.nodes,positions:this.getNodePositions(network,nodes)});});network.on('dragEnd',()=>{Streamlit.setComponentValue({selected:network.getSelectedNodes(),positions:this.getNodePositions(network,nodes)});});this.setState({network,nodes,edges});}getNodePositions(network,nodes){const positions={};nodes.forEach(node=>{const pos=network.getPosition(node.id);positions[node.id]={x:pos.x,y:pos.y};});return positions;}render(){return/*#__PURE__*/_jsxs(\"div\",{ref:this.container,style:{width:'100%',height:'600px',position:'relative',border:'1px solid #ddd',overflow:'hidden'},children:[/*#__PURE__*/_jsx(\"canvas\",{ref:this.backgroundCanvas,style:{position:'absolute',top:0,left:0,width:'100%',height:'100%',zIndex:0,opacity:0.3}}),/*#__PURE__*/_jsx(\"div\",{ref:this.networkContainer,style:{position:'absolute',top:0,left:0,width:'100%',height:'100%',zIndex:1}})]});}}export default withStreamlitConnection(VisNetwork);","map":{"version":3,"names":["React","Network","DataSet","Streamlit","StreamlitComponentBase","withStreamlitConnection","jsx","_jsx","jsxs","_jsxs","VisNetwork","constructor","arguments","container","createRef","networkContainer","backgroundCanvas","backgroundImage","animationFrame","state","network","nodes","edges","componentDidMount","console","log","setFrameHeight","setupNetwork","componentDidUpdate","props","args","setData","background_image","src","setupBackgroundImage","componentWillUnmount","destroy","cancelAnimationFrame","imageUrl","img","Image","onload","width","height","startRenderLoop","onerror","e","error","renderBackground","current","canvas","ctx","getContext","viewPosition","getViewPosition","scale","getScale","clearRect","containerRect","getBoundingClientRect","imageAspect","canvasAspect","renderWidth","renderHeight","x","y","drawImage","requestAnimationFrame","options","on","params","setComponentValue","selected","positions","getNodePositions","getSelectedNodes","setState","forEach","node","pos","getPosition","id","render","ref","style","position","border","overflow","children","top","left","zIndex","opacity"],"sources":["C:/Users/owner/Documents/Innovative Dev/Sensor Sentry GUI - Streamlit/streamlit_vis/frontend/src/VisNetwork.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Network } from 'vis-network';\r\nimport { DataSet } from 'vis-data';\r\nimport {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\n\r\ninterface NetworkProps {\r\n  nodes: any[];\r\n  edges: any[];\r\n  options: any;\r\n  background_image?: string;\r\n  height?: string;\r\n}\r\n\r\ninterface State {\r\n  network: Network | null;\r\n  nodes: DataSet<any>;\r\n  edges: DataSet<any>;\r\n}\r\n\r\nclass VisNetwork extends StreamlitComponentBase<State> {\r\n  private container = React.createRef<HTMLDivElement>();\r\n  private networkContainer = React.createRef<HTMLDivElement>();\r\n  private backgroundCanvas = React.createRef<HTMLCanvasElement>();\r\n  private backgroundImage: HTMLImageElement | null = null;\r\n  private animationFrame: number | null = null;\r\n  \r\n  public state: State = {\r\n    network: null,\r\n    nodes: new DataSet([]),\r\n    edges: new DataSet([])\r\n  };\r\n\r\n  public componentDidMount() {\r\n    console.log(\"Component mounted\");\r\n    Streamlit.setFrameHeight(600);\r\n    this.setupNetwork();\r\n  }\r\n\r\n  public componentDidUpdate() {\r\n    const props = this.props.args as NetworkProps;\r\n    \r\n    // Handle network data updates\r\n    if (this.state.network) {\r\n      const nodes = new DataSet(props.nodes);\r\n      const edges = new DataSet(props.edges);\r\n      this.state.network.setData({ nodes, edges });\r\n    }\r\n\r\n    // Handle background image updates\r\n    if (props.background_image && (!this.backgroundImage || this.backgroundImage.src !== props.background_image)) {\r\n      this.setupBackgroundImage(props.background_image);\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.state.network) {\r\n      this.state.network.destroy();\r\n    }\r\n    if (this.animationFrame) {\r\n      cancelAnimationFrame(this.animationFrame);\r\n    }\r\n  }\r\n\r\n  private setupBackgroundImage(imageUrl: string) {\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      console.log(\"Background image loaded\", { width: img.width, height: img.height });\r\n      this.backgroundImage = img;\r\n      this.startRenderLoop();\r\n    };\r\n    img.onerror = (e) => {\r\n      console.error(\"Error loading background image:\", e);\r\n    };\r\n    img.src = imageUrl;\r\n  }\r\n\r\n  private renderBackground() {\r\n    if (!this.backgroundCanvas.current || !this.backgroundImage || !this.state.network) return;\r\n    \r\n    const canvas = this.backgroundCanvas.current;\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    // Get current viewport state\r\n    const viewPosition = this.state.network.getViewPosition();\r\n    const scale = this.state.network.getScale();\r\n\r\n    // Clear canvas\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Calculate image positioning\r\n    const containerRect = canvas.getBoundingClientRect();\r\n    canvas.width = containerRect.width;\r\n    canvas.height = containerRect.height;\r\n\r\n    // Calculate dimensions that maintain aspect ratio\r\n    const imageAspect = this.backgroundImage.width / this.backgroundImage.height;\r\n    const canvasAspect = canvas.width / canvas.height;\r\n    \r\n    let renderWidth = canvas.width;\r\n    let renderHeight = canvas.height;\r\n    \r\n    if (canvasAspect > imageAspect) {\r\n      renderWidth = renderHeight * imageAspect;\r\n    } else {\r\n      renderHeight = renderWidth / imageAspect;\r\n    }\r\n\r\n    // Center position adjusted by network view position\r\n    const x = (canvas.width - renderWidth) / 2 - viewPosition.x * scale;\r\n    const y = (canvas.height - renderHeight) / 2 - viewPosition.y * scale;\r\n\r\n    // Draw image\r\n    try {\r\n      ctx.drawImage(\r\n        this.backgroundImage,\r\n        x,\r\n        y,\r\n        renderWidth * scale,\r\n        renderHeight * scale\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error rendering background:\", error);\r\n    }\r\n\r\n    this.animationFrame = requestAnimationFrame(() => this.renderBackground());\r\n  }\r\n\r\n  private startRenderLoop() {\r\n    if (this.animationFrame) {\r\n      cancelAnimationFrame(this.animationFrame);\r\n    }\r\n    this.renderBackground();\r\n  }\r\n\r\n  private setupNetwork() {\r\n    if (!this.networkContainer.current) return;\r\n\r\n    const props = this.props.args as NetworkProps;\r\n    const nodes = new DataSet(props.nodes);\r\n    const edges = new DataSet(props.edges);\r\n\r\n    const network = new Network(\r\n      this.networkContainer.current,\r\n      { nodes, edges },\r\n      props.options\r\n    );\r\n\r\n    network.on('select', (params) => {\r\n      Streamlit.setComponentValue({\r\n        selected: params.nodes,\r\n        positions: this.getNodePositions(network, nodes)\r\n      });\r\n    });\r\n\r\n    network.on('dragEnd', () => {\r\n      Streamlit.setComponentValue({\r\n        selected: network.getSelectedNodes(),\r\n        positions: this.getNodePositions(network, nodes)\r\n      });\r\n    });\r\n\r\n    this.setState({ network, nodes, edges });\r\n  }\r\n\r\n  private getNodePositions(network: Network, nodes: DataSet<any>) {\r\n    const positions: { [key: string]: { x: number, y: number } } = {};\r\n    nodes.forEach((node) => {\r\n      const pos = network.getPosition(node.id);\r\n      positions[node.id] = { x: pos.x, y: pos.y };\r\n    });\r\n    return positions;\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div\r\n        ref={this.container}\r\n        style={{\r\n          width: '100%',\r\n          height: '600px',\r\n          position: 'relative',\r\n          border: '1px solid #ddd',\r\n          overflow: 'hidden'\r\n        }}\r\n      >\r\n        <canvas\r\n          ref={this.backgroundCanvas}\r\n          style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            zIndex: 0,\r\n            opacity: 0.3\r\n          }}\r\n        />\r\n        <div \r\n          ref={this.networkContainer}\r\n          style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            zIndex: 1\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(VisNetwork);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}